{"version":3,"sources":["web3.js","lottery.js","App.js","reportWebVitals.js","index.js"],"names":["window","ethereum","request","method","web3","Web3","eth","Contract","App","useState","manager","setManager","players","setPlayers","balance","setBalance","value","setValue","message","setMessage","useEffect","getData","lottery","methods","call","getPlayers","getBalance","options","address","onSubmit","event","preventDefault","getAccounts","accounts","enter","send","from","utils","toWei","target","pickWinner","className","id","length","fromWei","name","placeholder","onChange","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.5fd96356.chunk.js","sourcesContent":["import Web3 from \"web3\";\r\n\r\nwindow.ethereum.request({ method: \"eth_requestAccounts\" });\r\n\r\nconst web3 = new Web3(window.ethereum);\r\n\r\nexport default web3;\r\n","import web3 from './web3.js';\r\n\r\nconst address = '0x95D7E9De1FC1ad97490aEbcf7665EB784256C10B'\r\n\r\nconst abi = [\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"constructor\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"enter\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"payable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"getPlayers\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address payable[]\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address[]\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"manager\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"pickWinner\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"players\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address payable\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n];\r\n\r\n\r\n\r\nexport default new web3.eth.Contract(abi,address);\r\n","import './App.css';\nimport web3 from './web3';\nimport lottery from './lottery';\nimport {useEffect,useState} from 'react';\n\n\nfunction App() {\n  const [manager, setManager] = useState('');\n  const [players, setPlayers] = useState('');\n  const [balance, setBalance] = useState('');\n  const [value, setValue] = useState('');\n  const [message, setMessage] = useState('');\n\n  useEffect(()=>{\n      const getData = async () =>{\n\n      const manager = await lottery.methods.manager().call();\n      // console.log(manager)\n      setManager(manager);\n\n      const players = await lottery.methods.getPlayers().call();\n      setPlayers(players);\n\n      const balance = await web3.eth.getBalance(lottery.options.address);\n      setBalance(balance);\n\n    }\n\n    getData();\n\n  },[]);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try{\n    const accounts = await web3.eth.getAccounts();\n\n    setMessage('Waiting on transaction success...');\n\n    await lottery.methods.enter().send({\n      from:accounts[0],\n      value:web3.utils.toWei(value,\"ether\")\n    });\n\n    event.target.value = '';\n\n    setMessage('You have been entered');\n  }catch(err){\n    setMessage('Invalid input!!! To enter you need to enter ether greater then 0.01');\n  }\n\n  }\n\n  const pickWinner = async () =>{\n    try{\n      const accounts = await web3.eth.getAccounts();\n\n      setMessage('Waiting on transaction success...');\n\n      await lottery.methods.pickWinner().send({\n        from:accounts[0]\n      });\n\n        setMessage('Winner has been picked!!!!');\n    }\n    catch(err){\n      setMessage('Only Manager of Contract can pick the winner!')\n    }\n  }\n\n  return (\n    <div className=\"App DarkApp\">\n      <h1 id = \"headerDark\">Lottery Dapp</h1>\n      <div id=\"centerContainerDark\">\n        <h4>This lotter is managed by {manager}.</h4>\n        <h4>There are currently {players.length} people entered,</h4>\n        <h4>competing to win {web3.utils.fromWei(balance,'ether')} ether!</h4>\n      </div>\n      <div className=\"displayFlex\">\n        <form id=\"darkForm\" onSubmit = {onSubmit}>\n            <h3>Want to try your luck?</h3>\n            <div>\n              <input name=\"value\" placeholder = \"Enter the amount of Ether\" value={value} onChange={event => setValue(event.target.value)}\n              />\n            </div>\n            <button className=\"darkButton\">Enter</button>\n       </form>\n       <div id=\"darkPickWinner\">\n         <h4>Ready to pick a winner?</h4>\n         <button className=\"darkButton\" onClick = {pickWinner}>Pick a winner</button>\n       </div>\n      </div>\n\n      <div className=\"darkNotification\">\n       <h5>{message}</h5>\n      </div>\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}